
services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: foyerdhia
      MYSQL_USER: foyer_user
      MYSQL_PASSWORD: foyer_pass
      MYSQL_DATABASE_SONAR: sonar
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-u$${MYSQL_USER}", "-p$${MYSQL_PASSWORD}", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 10
    deploy:
      resources:
        limits:
          memory: 1G
    networks:
      - foyer-network

  spring-app:
    image: dhiashayeb017/chaiebdhia_4twin4_innovativesquad_foyer:latest
    labels:
      - com.centurylinklabs.watchtower.enable=true
    container_name: spring-app
    ports:
      - "8089:8089"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/foyerdhia?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      - SPRING_DATASOURCE_USERNAME=foyer_user
      - SPRING_DATASOURCE_PASSWORD=foyer_pass
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SERVER_SERVLET_CONTEXT_PATH=/foyer
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8089/foyer/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - foyer-network

  prometheus:
    image: prom/prometheus:latest
    labels:
      - com.centurylinklabs.watchtower.enable=true
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
    networks:
      - foyer-network

  grafana:
    image: grafana/grafana:latest
    labels:
      - com.centurylinklabs.watchtower.enable=true
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - foyer-network

  sonarqube:
    image: sonarqube:7.9-community
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      - SONAR_JDBC_URL=jdbc:mysql://mysql:3306/sonar?useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      - SONAR_JDBC_USERNAME=foyer_user
      - SONAR_JDBC_PASSWORD=foyer_pass
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/api/system/status"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 2G
    networks:
      - foyer-network

  nexus:
    image: sonatype/nexus3:latest
    container_name: nexus
    ports:
      - "8081:8081"
    volumes:
      - nexus_data:/nexus-data
    environment:
      - INSTALL4J_ADD_VM_PARAMS=-Xms1g -Xmx2g -XX:MaxDirectMemorySize=2g
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/service/metrics/ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 2G
    networks:
      - foyer-network

  # Monitoring exporters (optional)
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
    networks:
      - foyer-network

  mysql-exporter:
    image: prom/mysqld-exporter:latest
    container_name: mysql-exporter
    ports:
      - "9104:9104"
    environment:
      - DATA_SOURCE_NAME=foyer_user:foyer_pass@(mysql:3306)/foyerdhia
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - foyer-network

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    ports:
      - "9001:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    environment:
      - PORTAINER_ADMIN_PASSWORD_FILE=/data/admin_password
    networks:
      - foyer-network
    restart: unless-stopped

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_SCHEDULE=0 0 4 * * *
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_LABEL_ENABLE=true
    restart: unless-stopped
    networks:
      - foyer-network

networks:
  foyer-network:
    driver: bridge

volumes:
  mysql_data:
  grafana_data:
  prometheus_data:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:
  nexus_data:
  portainer_data: